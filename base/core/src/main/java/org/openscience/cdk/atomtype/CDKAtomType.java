package org.openscience.cdk.atomtype;

import org.openscience.cdk.interfaces.IAtomType;
import org.openscience.cdk.interfaces.IAtomType.Hybridization;
import org.openscience.cdk.interfaces.IBond;
import org.openscience.cdk.interfaces.IChemObjectBuilder;

public enum CDKAtomType {
	
	/**
  <at:AtomType rdf:ID="C.sp2">
    <at:formalCharge>0</at:formalCharge>
    <at:hasElement rdf:resource="&elem;C"/>
    <at:lonePairCount>0</at:lonePairCount>
    <at:hybridization rdf:resource="&at;sp2"/>
    <at:formalBondType rdf:resource="&bo;double"/>
    <at:formalBondType rdf:resource="&bo;single"/>
    <at:formalBondType rdf:resource="&bo;single"/>
  </at:AtomType>
	 **/
	
	// the following list is an autogenerated from the XML specification in <code>org/openscience/cdk/dict/data/cdk-atom-types.owl</code>
	Csp3("C.sp3", 6, 0, 0, Hybridization.SP3, IBond.Order.SINGLE, IBond.Order.SINGLE, IBond.Order.SINGLE, IBond.Order.SINGLE),
	Csp2("C.sp2", 6, 0, 0, Hybridization.SP2, IBond.Order.DOUBLE, IBond.Order.SINGLE, IBond.Order.SINGLE),
	Csp("C.sp", 6, 0, 0, Hybridization.SP2, IBond.Order.TRIPLE, IBond.Order.SINGLE),
	Callene("C.allene", 6, 0, 0, Hybridization.SP2, IBond.Order.DOUBLE, IBond.Order.DOUBLE);

    // the following code is generic for CDK atom types and not autogenerated

	private final String name;
	private final int atomicNumber, formalCharge, longPairCount;
	private final Hybridization hybridization;
	
	CDKAtomType(String name, int atomicNumber, int formalCharge, int lonePairCount, Hybridization hybridization,
			IBond.Order... orders) {
		this.name = name;
		this.atomicNumber = atomicNumber;
		this.formalCharge = formalCharge;
		this.longPairCount = lonePairCount;
		this.hybridization = hybridization;
		// what to do with the formal bond orders??
	}

	public IAtomType asAtomType(IChemObjectBuilder builder) {
		IAtomType type = builder.newInstance(IAtomType.class);
		type.setAtomTypeName(this.name);
		type.setAtomicNumber(this.atomicNumber);
		type.setFormalCharge(this.formalCharge);
		type.setHybridization(this.hybridization);
		return type;
	}
	
}
